
FORMAT: 1A
HOST: HOST:/127.0.0.1:8002

# JWT Authentication

New User Registraion is done through this API

##  New User Registration [/api/auth/registration]


### Registration [POST]

Here user will register useing his name,e-mail and password for the application 

+ Request (application/json) from client side

                       [
                       {
                        
                        "name" : "gurukiran"
                        "email": "gurukiran@gmail.com"
                        "password": "********"
                        "password_confirmation" : "********"
                       }
                       ]
         
          If JSON details correct with then user will be registered ....
          
          
          {
        "status": true,
        "message": "User successfully registered",
       "user": {
        "name": "gurukiran",
        "email": "gurukiran@gmail.com",
        "updated_at": "2022-03-29T09:00:31.000000Z",
        "created_at": "2022-03-29T09:00:31.000000Z",
        "id": 748663707473510401
}

          HEADER:Content-Type & TYPE

{
+ Header
  Content-Type:application/json,
  type: application/json

}




            
                       



## User Login [/api/auth/login]
### Login [POST]

Here user will login useing his e-mail and password  

+ Request (application/json) from client side

                       [
                       {
                        
                        "email":"gurukiran@gmail.com",
                        "password": "********"

                       }
                       ]
                       
{
       
+ Response 200 (application/json)        
          If Credentials are correct with then user will be logedin and access token will be generated.
        

          {
        "access_token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC8xMjcuMC4wLjE6ODAwMFwvYXBpXC9hdXRoXC9sb2dpbiIsImlhdCI6MTY0ODU0NTg4NSwiZXhwIjoxNjQ4NTQ5NDg1LCJuYmYiOjE2NDg1NDU4ODUsImp0aSI6IlZhUXUxRjBKSUlBbFlpNHEiLCJzdWIiOjc0ODY2MzcwNzQ3MzUxMDQwMSwicHJ2IjoiMjNiZDVjODk0OWY2MDBhZGIzOWU3MDFjNDAwODcyZGI3YTU5NzZmNyJ9.zfLMEfpv-XMWtDSnhqFU5NuSumNimrNNHzRaT9Wy_r4",
    "token_type": "bearer",
    "expires_in": 3600,
    "user": {
        "id": 748663707473510401,
        "name": "gurukiran",
        "email": "gurukiran@gmail.com",
        "email_verified_at": null,
        "created_at": "2022-03-29T09:00:31.000000Z",
        "updated_at": "2022-03-29T09:00:31.000000Z"
}

         

{
{
+ Header

  type: application/json

}

}
+ Response 401 (application/json)  
        If Credentials are wrong then he is an unauthorised user

          {
     "error": "Unauthorized"
}

         



## Refreshing JWT Token [/api/auth/refresh]
### Refresh Token [GET]

Here JWT Tokens which are assigned to user will be refreshed and new JWT Token will be assigned to them  

+ Request (application/json) from client side

     
    + Headers
            Content-Type: "application/json",
            type:"application/json"
            Authenticate:"bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC8xMjcuMC4wLjE6ODAwMFwvYXBpXC9hdXRoXC9sb2dpbiIsImlhdCI6MTY0ODU0NTg4NSwiZXhwIjoxNjQ4NTQ5NDg1LCJuYmYiOjE2NDg1NDU4ODUsImp0aSI6IlZhUXUxRjBKSUlBbFlpNHEiLCJzdWIiOjc0ODY2MzcwNzQ3MzUxMDQwMSwicHJ2IjoiMjNiZDVjODk0OWY2MDBhZGIzOWU3MDFjNDAwODcyZGI3YTU5NzZmNyJ9.zfLMEfpv-XMWtDSnhqFU5NuSumNimrNNHzRaT9Wy_r4"




+ Response 200 (application/json)
   

If that token is present then that will be changed to new one
            
            
            {
                
              "access_token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC8xMjcuMC4wLjE6ODAwMFwvYXBpXC9hdXRoXC9yZWZyZXNoIiwiaWF0IjoxNjQ4NTQ5NzMxLCJleHAiOjE2NDg1NTMzNDgsIm5iZiI6MTY0ODU0OTc0OCwianRpIjoiUDdXaHFhTXRYaUNpeElsTyIsInN1YiI6NzQ4NjYzNzA3NDczNTEwNDAxLCJwcnYiOiIyM2JkNWM4OTQ5ZjYwMGFkYjM5ZTcwMWM0MDA4NzJkYjdhNTk3NmY3In0.x42jqutzBhtjmAlbITQ4y6x_Z0L1XmCT-MNhvjwFU2g",
                "token_type": "bearer",
                "expires_in": 3600,
                "user": {
                    "id": 748663707473510401,
                    "name": "gurukiran",
                    "email": "gurukiran@gmail.com",
                    "email_verified_at": null,
                    "created_at": "2022-03-29T09:00:31.000000Z",
                    "updated_at": "2022-03-29T09:00:31.000000Z"
                        }
    
    


+ Response 401 (application/json)
      + Headers
         Content-Type: application/json,
         type:application/json
         Authenticate:"bearer eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC8xMjcuMC4wLjE6ODAwMFwvYXBpXC9hdXRoXC9sb2dpbiIsImlhdCI6MTY0ODU0NTg4NSwiZXhwIjoxNjQ4NTQ5NDg1LCJuYmYiOjE2NDg1NDU4ODUsImp0aSI6IlZhUXUxRjBKSUlBbFlpNHEiLCJzdWIiOjc0ODY2MzcwNzQ3MzUxMDQwMSwicHJ2IjoiMjNiZDVjODk0OWY2MDBhZGIzOWU3MDFjNDAwODcyZGI3YTU5NzZmNyJ9.zfLMEfpv-XMWtDSnhqFU5NuSumNimrNNHzRaT9Wy_r4",
        
                    
If it is not present 
            
                
             {
                 "message": "Unauthenticated."
            }

## User Details View [/api/auth/user-profile]
### User Profile Featch [POST]

This API featches the account details of user with help of JWT Token of the user. 

+ Request (application/json) from client side

     
    + Headers
            Content-Type: "application/json",
            type:"application/json",
            Authenticate:"bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC8xMjcuMC4wLjE6ODAwMFwvYXBpXC9hdXRoXC9sb2dpbiIsImlhdCI6MTY0ODU0NTg4NSwiZXhwIjoxNjQ4NTQ5NDg1LCJuYmYiOjE2NDg1NDU4ODUsImp0aSI6IlZhUXUxRjBKSUlBbFlpNHEiLCJzdWIiOjc0ODY2MzcwNzQ3MzUxMDQwMSwicHJ2IjoiMjNiZDVjODk0OWY2MDBhZGIzOWU3MDFjNDAwODcyZGI3YTU5NzZmNyJ9.zfLMEfpv-XMWtDSnhqFU5NuSumNimrNNHzRaT9Wy_r4",


                       
          
          
+ Response 200 (application/json)


    If that token is present then user details will be featched.
            
            
            {
                
              "id": 748685973175861249,
             "name": "gurukiran",
            "email": "gurukiran@gmail.com",
            "email_verified_at": null,
            "created_at": "2022-03-29T10:53:46.000000Z",
            "updated_at": "2022-03-29T10:53:46.000000Z"
                       
                        }

+ Response 401 (application/json)
  + Headers
            Content-Type: "application/json",
            type:"application/json",
            Authenticate:"bearer J0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC8xMjcuMC4wLjE6ODAwMFwvYXBpXC9hdXRoXC9sb2dpbiIsImlhdCI6MTY0ODU0NTg4NSwiZXhwIjoxNjQ4NTQ5NDg1LCJuYmYiOjE2NDg1NDU4ODUsImp0aSI6IlZhUXUxRjBKSUlBbFlpNHEiLCJzdWIiOjc0ODY2MzcwNzQ3MzUxMDQwMSwicHJ2IjoiMjNiZDVjODk0OWY2MDBhZGIzOWU3MDFjNDAwODcyZGI3YTU5NzZmNyJ9.zfLMEfpv-XMWtDSnhqFU5NuSumNimrNNHzRaT9Wy_r4",

If it is not present 
            
                
             {
                 "message": "Unauthenticated."
            }


## User Details View [/api/auth/logout]
### Logout [POST]

Here user will be logged out with help of this API request

+ Request (application/json) from client side

     
    + Headers
            Content-Type: "application/json",
            type:"application/json",
            Authenticate:"bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC8xMjcuMC4wLjE6ODAwMFwvYXBpXC9hdXRoXC9sb2dpbiIsImlhdCI6MTY0ODU0NTg4NSwiZXhwIjoxNjQ4NTQ5NDg1LCJuYmYiOjE2NDg1NDU4ODUsImp0aSI6IlZhUXUxRjBKSUlBbFlpNHEiLCJzdWIiOjc0ODY2MzcwNzQ3MzUxMDQwMSwicHJ2IjoiMjNiZDVjODk0OWY2MDBhZGIzOWU3MDFjNDAwODcyZGI3YTU5NzZmNyJ9.zfLMEfpv-XMWtDSnhqFU5NuSumNimrNNHzRaT9Wy_r4",


                       
          
          
+ Response 200 (application/json)


    If that token is present then user details will be featched.
            
            
            {
                
              "message": "User successfully signed out"
                       
                        }

+ Response 401 (application/json)
  + Headers
            Content-Type: "application/json",
            type:"application/json",
            Authenticate:"bearer J0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC8xMjcuMC4wLjE6ODAwMFwvYXBpXC9hdXRoXC9sb2dpbiIsImlhdCI6MTY0ODU0NTg4NSwiZXhwIjoxNjQ4NTQ5NDg1LCJuYmYiOjE2NDg1NDU4ODUsImp0aSI6IlZhUXUxRjBKSUlBbFlpNHEiLCJzdWIiOjc0ODY2MzcwNzQ3MzUxMDQwMSwicHJ2IjoiMjNiZDVjODk0OWY2MDBhZGIzOWU3MDFjNDAwODcyZGI3YTU5NzZmNyJ9.zfLMEfpv-XMWtDSnhqFU5NuSumNimrNNHzRaT9Wy_r4",

If it is not present 
            
                
             {
                 "message": "Unauthenticated."
            }


